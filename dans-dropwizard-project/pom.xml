<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2018 DANS - Data Archiving and Networked Services (info@dans.knaw.nl)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>nl.knaw.dans.shared</groupId>
        <artifactId>dans-mvn-plugin-defaults</artifactId>
        <version>7.4.0-SNAPSHOT</version>
        <relativePath>../dans-mvn-plugin-defaults</relativePath>
    </parent>

    <artifactId>dans-dropwizard-project</artifactId>
    <version>7.4.0-SNAPSHOT</version>
    <name>DANS DropWizard Project</name>
    <description>
        A DropWizard based project
    </description>
    <packaging>pom</packaging>
    <scm>
        <developerConnection>scm:git:https://github.com/DANS-KNAW/${project.artifactId}</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <dropwizard.version>2.1.1</dropwizard.version>

        <!-- Logging -->
        <slf4j.version>1.7.30</slf4j.version>

        <!-- Database -->
        <postgresql.version>42.3.3</postgresql.version>
        <hsqldb.version>2.5.0</hsqldb.version>
        <solr4j.version>8.5.1</solr4j.version>

        <!-- Formats -->
        <bagit.version>5.4.0</bagit.version>
        <zip4j.version>2.11.1</zip4j.version>
        <jgit.version>5.7.0.202003110725-r</jgit.version>
        <tika.version>1.24.1</tika.version>
        <ocfl-java-core.version>1.4.4</ocfl-java-core.version>

        <!-- Apache Commons -->
        <commons-io.version>2.7</commons-io.version>
        <commons-codec.version>1.14</commons-codec.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-configuration.version>1.10</commons-configuration.version>
        <commons-csv.version>1.8</commons-csv.version>
        <commons-daemon.version>1.2.2</commons-daemon.version>
        <commons-dbcp2.version>2.7.0</commons-dbcp2.version>
        <commons-compress.version>1.21</commons-compress.version>
        <commons-fileupload.version>1.4</commons-fileupload.version>
        <commons-configuration2.version>2.8.0</commons-configuration2.version>

        <!-- XML -->
        <jaxb-api.version>2.3.1</jaxb-api.version>
        <jaxb-runtime.version>2.3.6</jaxb-runtime.version>
        <jersey-media-jaxb.version>2.35</jersey-media-jaxb.version>

        <!-- Misc utilities -->
        <dans-java-utils.version>0.0.8</dans-java-utils.version>
        <quartz.version>2.3.2</quartz.version>
        <velocity-engine-core.version>2.3</velocity-engine-core.version>
        <json-path.version>2.6.0</json-path.version>
        <dans-dataverse-client-lib.version>0.1.1</dans-dataverse-client-lib.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <jbcrypt.version>0.4</jbcrypt.version>


        <!-- Open API -->
        <okhttp.version>4.9.3</okhttp.version>
        <gson-fire.version>1.8.5</gson-fire.version>
        <gson.version>2.9.0</gson.version>
        <swagger-core.version>1.6.5</swagger-core.version>

        <!-- Scala / EASY legacy -->
        <scallop.version>3.4.0</scallop.version>
        <scalarx.version>0.27.0</scalarx.version>
        <scala-xml.version>1.3.0</scala-xml.version>
        <scalaj-http.version>2.4.2</scalaj-http.version>
        <scala-arm.version>2.0</scala-arm.version>
        <dans-scala-lib.version>1.6.4</dans-scala-lib.version>
        <better-files.version>3.8.0</better-files.version>
        <cats-core.version>2.1.1</cats-core.version>
        <scala-test.version>3.1.1</scala-test.version>
        <scalamock.version>4.4.0</scalamock.version>
        <scalacheck.version>1.14.3</scalacheck.version>
        <scalatestplus-check.version>3.1.0.0-RC2</scalatestplus-check.version>
        <cats-scalatest.version>3.0.5</cats-scalatest.version>
        <json4s.version>3.7.0-M4</json4s.version>
        <easymock.version>4.2</easymock.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--
                Dependencies imported with DropWizard should not be overridden. We should go with the version of
                each library that DropWizard wants so as to ensure it works smoothly.
            -->
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-dependencies</artifactId>
                <version>${dropwizard.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>


            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- Database -->
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>


            <!-- Formats -->
            <dependency>
                <groupId>nl.knaw.dans</groupId>
                <artifactId>bagit</artifactId>
                <version>${bagit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>net.lingala.zip4j</groupId>
                <artifactId>zip4j</artifactId>
                <version>${zip4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-core</artifactId>
                <version>${tika.version}</version>
            </dependency>
            <dependency>
                <groupId>edu.wisc.library.ocfl</groupId>
                <artifactId>ocfl-java-core</artifactId>
                <version>${ocfl-java-core.version}</version>
            </dependency>


            <!-- Apache Commons -->
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons-configuration.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>${commons-csv.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-daemon</groupId>
                <artifactId>commons-daemon</artifactId>
                <version>${commons-daemon.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-dbcp2</artifactId>
                <version>${commons-dbcp2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-configuration2</artifactId>
                <version>${commons-configuration2.version}</version>
            </dependency>

            <!-- XML -->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>${jaxb-runtime.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-jaxb</artifactId>
                <version>${jersey-media-jaxb.version}</version>
            </dependency>



            <!-- Misc utilities -->
            <dependency>
                <groupId>nl.knaw.dans</groupId>
                <artifactId>dans-java-utils</artifactId>
                <version>${dans-java-utils.version}</version>
            </dependency>
            <dependency>
                <groupId>nl.knaw.dans</groupId>
                <artifactId>dans-dataverse-client-lib</artifactId>
                <version>${dans-dataverse-client-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity-engine-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mindrot</groupId>
                <artifactId>jbcrypt</artifactId>
                <version>${jbcrypt.version}</version>
            </dependency>



            <!-- Open APi -->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>logging-interceptor</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>io.gsonfire</groupId>
                <artifactId>gson-fire</artifactId>
                <version>${gson-fire.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-core.version}</version>
            </dependency>


            <!-- Scala / EASY legacy - TODO: REMOVE WHEN SCALA IS PHASED OUT -->
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_2.12</artifactId>
                <version>${scala-test.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalamock</groupId>
                <artifactId>scalamock_2.12</artifactId>
                <version>${scalamock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalacheck</groupId>
                <artifactId>scalacheck_2.12</artifactId>
                <version>${scalacheck.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalatestplus</groupId>
                <artifactId>scalatestplus-scalacheck_2.12</artifactId>
                <version>${scalatestplus-check.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalatra</groupId>
                <artifactId>scalatra-scalatest_2.12</artifactId>
                <version>${scalatra.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.ironcorelabs</groupId>
                <artifactId>cats-scalatest_2.12</artifactId>
                <version>${cats-scalatest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang.modules</groupId>
                <artifactId>scala-xml_2.12</artifactId>
                <version>${scala-xml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.rogach</groupId>
                <artifactId>scallop_2.12</artifactId>
                <version>${scallop.version}</version>
            </dependency>
            <dependency>
                <groupId>io.reactivex</groupId>
                <artifactId>rxscala_2.12</artifactId>
                <version>${scalarx.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jsuereth</groupId>
                <artifactId>scala-arm_2.12</artifactId>
                <version>${scala-arm.version}</version>
            </dependency>
            <dependency>
                <groupId>nl.knaw.dans.lib</groupId>
                <artifactId>dans-scala-lib_2.12</artifactId>
                <version>${dans-scala-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pathikrit</groupId>
                <artifactId>better-files_2.12</artifactId>
                <version>${better-files.version}</version>
            </dependency>
            <dependency>
                <groupId>org.typelevel</groupId>
                <artifactId>cats-core_2.12</artifactId>
                <version>${cats-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scalaj</groupId>
                <artifactId>scalaj-http_2.12</artifactId>
                <version>${scalaj-http.version}</version>
            </dependency>
            <dependency>
                <groupId>org.json4s</groupId>
                <artifactId>json4s-native_2.12</artifactId>
                <version>${json4s.version}</version>
            </dependency>
            <dependency>
                <groupId>org.json4s</groupId>
                <artifactId>json4s-ext_2.12</artifactId>
                <version>${json4s.version}</version>
            </dependency>
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>${easymock.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <dependencies>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/assembly/dist/bin</directory>
                <targetPath>${project.build.directory}/version</targetPath>
                <includes>
                    <include>version</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <!-- Creates dynamic properties and resources -->
                <artifactId>maven-antrun-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- To support alternative deploy for RPMs -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>rpm-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-rpm</id>
                            <goals>
                                <goal>attached-rpm</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration combine.children="override">
                        <group>Applications/Archiving</group>
                        <release>${rpm-release}</release>
                        <vendor>${dans-provider-name}</vendor>
                        <packager>${dans-provider-name}</packager>
                        <name>${dans-provider-name}-${project.artifactId}</name>
                        <defaultUsername>root</defaultUsername>
                        <defaultGroupname>root</defaultGroupname>
                        <license>Apache 2.0</license>
                        <targetOS>Linux</targetOS>
                        <defaultFilemode>744</defaultFilemode>
                        <defaultDirmode>755</defaultDirmode>
                        <mappings combine.self="override">
                            <!-- Contents of ${app.home}/lib -->
                            <mapping>
                                <directory>/opt/${dans-provider-name}/${project.artifactId}/lib</directory>
                                <dependency>
                                    <stripVersion>false</stripVersion>
                                </dependency>
                            </mapping>
                            <!-- Read-only contents of ${app.home}/bin  -->
                            <mapping>
                                <directory>/opt/${dans-provider-name}/${project.artifactId}/bin</directory>
                                <sources>
                                    <source>
                                        <location>src/main/assembly/dist/bin</location>
                                        <excludes>
                                            <!-- This is the executable, so exclude here -->
                                            <exclude>${project.artifactId}-${project.version}</exclude>
                                        </excludes>
                                    </source>
                                    <source>
                                        <location>
                                            ${project.build.directory}/${project.artifactId}-${project.version}.jar
                                        </location>
                                    </source>
                                </sources>
                            </mapping>
                            <!-- Executable contents of ${app.home}/bin -->
                            <mapping>
                                <directory>/opt/${dans-provider-name}/${project.artifactId}/bin</directory>
                                <filemode>755</filemode>
                                <sources>
                                    <source>
                                        <location>src/main/assembly/dist/bin/${project.artifactId}</location>
                                    </source>
                                </sources>
                            </mapping>
                            <!-- Contents of cfg dir under /etc/opt ... -->
                            <mapping>
                                <directory>/etc/opt/${dans-provider-name}/${project.artifactId}</directory>
                                <configuration>${rpm-replace-configuration}</configuration>
                                <sources>
                                    <source>
                                        <location>src/main/assembly/dist/cfg</location>
                                    </source>
                                </sources>
                            </mapping>
                            <!-- Contents of ${app.home}/* (except cfg,bin) -->
                            <mapping>
                                <directory>/opt/${dans-provider-name}/${project.artifactId}</directory>
                                <sources>
                                    <source>
                                        <location>src/main/assembly/dist</location>
                                        <excludes>
                                            <exclude>bin/*</exclude>
                                            <exclude>cfg/*</exclude>
                                        </excludes>
                                    </source>
                                </sources>
                            </mapping>
                            <!-- Symlink to executable, to put it on the PATH -->
                            <mapping>
                                <directory>/opt/bin</directory>
                                <sources>
                                    <softlinkSource>
                                        <location>
                                            /opt/${dans-provider-name}/${project.artifactId}/bin/${project.artifactId}
                                        </location>
                                    </softlinkSource>
                                </sources>
                            </mapping>
                            <!-- Symlink jar to version-less location -->
                            <mapping>
                                <directory>/opt/${dans-provider-name}/${project.artifactId}/bin/</directory>
                                <sources>
                                    <softlinkSource>
                                        <destination>${project.artifactId}.jar</destination>
                                        <location>
                                            /opt/${dans-provider-name}/${project.artifactId}/bin/${project.artifactId}-${project.version}.jar
                                        </location>
                                    </softlinkSource>
                                </sources>
                            </mapping>
                        </mappings>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>java11+</id>
            <activation>
                <jdk>[11,)</jdk>
            </activation>
            <properties>
                <!--
                Workaround for "javadoc: error - The code being documented uses modules but the packages
                defined in https://docs.oracle.com/javase/8/docs/api/ are in the unnamed module."
                -->
                <maven.javadoc.skip>true</maven.javadoc.skip>
            </properties>
        </profile>
    </profiles>
</project>
